# -*- coding: utf-8 -*-
"""currency_converter.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sImenZLcPChX_U7estaQLjF82rc9xQVi
"""

import requests

# Fetch exchange rates from the ExchangeRate-API
def fetch_exchange_rates(base_currency):
    url = f"https://open.er-api.com/v6/latest/{base_currency}"
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Error: Unable to fetch exchange rates (Status Code: {response.status_code})")
        return None

# Convert currencies using fetched rates
def convert_currency(amount, from_currency, to_currency, rates):
    if from_currency not in rates or to_currency not in rates:
        print(f"Error: Unsupported currency code.")
        return None
    converted_amount = (amount / rates[from_currency]) * rates[to_currency]
    return converted_amount

# Main application
if __name__ == "__main__":
    print("Welcome to Currency Converter CLI!")

    # Fetch exchange rates
    print("Fetching latest exchange rates...")
    base_currency = "USD"  # Default base currency
    data = fetch_exchange_rates(base_currency)

    if not data:
        print("Failed to retrieve exchange rates. Exiting...")
        exit()

   # Print the response
    print("API Response:", data)

    # Check for 'result' and 'rates' keys in the response
    if data.get("result") != "success" or "rates" not in data:
        print("Failed to retrieve valid exchange rates. Exiting...")
        exit()

    rates = data["rates"]  # Use the correct key 'rates'

    # Conversion process
    try:
        print("\nAvailable currencies:", ", ".join(rates.keys()))
        from_currency = input("Enter the currency you want to convert from (e.g., USD): ").upper()
        to_currency = input("Enter the currency you want to convert to (e.g., EUR): ").upper()
        amount = float(input(f"Enter the amount in {from_currency}: "))

        converted_amount = convert_currency(amount, from_currency, to_currency, rates)
        if converted_amount:
            print(f"\nðŸ’± {amount:.2f} {from_currency} = {converted_amount:.2f} {to_currency}")
        else:
            print("Conversion failed.")
    except ValueError:
        print("Invalid input. Please enter numeric values for the amount.")
    except Exception as e:
        print(f"An error occurred: {e}")